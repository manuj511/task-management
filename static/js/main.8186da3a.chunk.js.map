{"version":3,"sources":["assets/img/app-logo.png","header.js","footer.js","TaskCard.js","ListView.js","addTask.js","TaskManagement.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","flexGrow","marginBottom","imgStyle","height","width","marginRight","Header","classes","className","AppBar","position","Toolbar","variant","src","GradeUpLogo","alt","Typography","color","bottom","footerStyle","display","justifyContent","Footer","maxWidth","margin","border","backgroundColor","titleText","textTransform","buttonText","fontWeight","TaskCard","props","lists","currentListName","listTask","moveHandler","title","description","otherLists","filter","list","Card","CardActionArea","CardContent","gutterBottom","component","CardActions","Button","size","onClick","overflow","borderRadius","textAlign","emptyListText","left","boxStyle","ListView","listName","listItems","listLabels","Box","length","map","listItem","paperStyle","padding","textFieldStyle","marginLeft","buttonStyle","marginTop","labelStyle","textDecoration","AddTask","addNewTask","useState","newTask","setNewTask","Grid","Paper","elevation","align","text","htmlFor","TextField","type","placeholder","onChange","e","target","value","fullWidth","required","preventDefault","handleNewTask","disabled","TaskManagement","todo","progress","done","items","setItems","handleTaskMove","dest","item","srcList","destList","newSrcList","it","isEqual","newDestList","push","updatedItems","listInstance","task","todoItems","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8186da3a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/app-logo.984c794d.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GradeUpLogo from './assets/img/app-logo.png';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom:'10px',\r\n  },\r\n  imgStyle:{\r\n      height:'40px',\r\n      width:'60px',\r\n      marginRight: '5px',\r\n  }\r\n}));\r\n// component to render Header Section\r\nexport const Header=()=> {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n            <img src={GradeUpLogo} alt=\"app-logo\" className={classes.imgStyle}/>\r\n          <Typography variant=\"h5\" color=\"inherit\">\r\n            GradeUp - Task Management\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position:'fixed',\r\n    bottom:'0px',\r\n    width:'100%',\r\n  },\r\n  footerStyle: {\r\n    display:'flex',\r\n    justifyContent:'space-between',\r\n  },\r\n}));\r\n// component to render Footer Section\r\nexport const Footer=()=> {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\" className={classes.footerStyle}>\r\n          <Typography variant=\"p\" color=\"inherit\">\r\n          &copy; MANUJ GUPTA \r\n          </Typography>\r\n          <Typography variant=\"p\" color=\"inherit\">\r\n            Contact - manuj.gupta511@gmail.com\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: '100%',\r\n    margin:'1px 0px',\r\n    border: '1px solid #2a384794',\r\n    backgroundColor:'#2f54bd38',\r\n  },\r\n  titleText:{\r\n      textTransform:'capitalize',\r\n  },\r\n  buttonText:{\r\n      fontWeight:'bold',\r\n      color:'#0c0c1abf'\r\n  }\r\n});\r\n// this component renders a card for the task item\r\nexport const TaskCard=(props)=> {\r\n  const {lists,currentListName,listTask,moveHandler}=props;\r\n  const {title,description} = listTask;\r\n  const otherLists = lists.filter((list)=> list!==currentListName);  \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.titleText}>\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" className={classes.buttonText} onClick={()=>moveHandler(currentListName,otherLists[0],listTask)}>\r\n          {`Move to ${otherLists[0]}`}\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\" className={classes.buttonText} onClick={()=>moveHandler(currentListName,otherLists[1],listTask)}>\r\n          {`Move to ${otherLists[1]}`}\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\nexport default TaskCard;","import { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport TaskCard from './TaskCard';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      display: 'block',\r\n      width: '33%',\r\n      height:'350px',\r\n      margin:'0px 20px',\r\n      justifyContent: 'space-between',\r\n      border:'2px solid black',\r\n      overflow:'auto',\r\n      borderRadius:\"40px\",\r\n    },\r\n    title:{\r\n        textTransform: 'capitalize',\r\n        textAlign:'center',\r\n        color:'#fff',\r\n        \r\n    },\r\n    emptyListText:{\r\n        position:'relative',\r\n        left:'30%',\r\n        display: 'inline-block',\r\n    },\r\n    boxStyle:{\r\n        backgroundColor:'#3f51b5',\r\n        width:'100%'\r\n    },\r\n  });\r\n// this component renders each list {todo,progress,done}\r\nexport const ListView = (props)=>{\r\n    const classes=useStyles();\r\n    const {listName,listItems,listLabels,moveHandler}=props;\r\n    return(\r\n        <>\r\n        <div className={classes.root}>\r\n            <Box className={classes.boxStyle}>\r\n            <Typography variant=\"h5\" className={classes.title}>\r\n                {listName}\r\n            </Typography>\r\n            </Box><br/>\r\n            <Box >\r\n                {\r\n                   (listItems.length!==0) ? listItems.map((listItem)=>{\r\n                        return <TaskCard lists={listLabels} currentListName={listName} listTask={listItem} moveHandler={moveHandler}/>\r\n                    }) :\r\n                    <Typography variant=\"p\" className={classes.emptyListText}>No Items Present here</Typography>\r\n                }\r\n            </Box>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\nexport default ListView;","\r\nimport React , {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Typography,Grid,Button,TextField } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    paperStyle: {\r\n\t\tpadding: 20,\r\n\t\theight: '25vh',\r\n\t\twidth: 350,\r\n\t\tmargin: '20px auto',\r\n\t\tbackgroundColor: '#3f51b5',\r\n\t\tcolor: 'white'\r\n\t},\r\n    textFieldStyle: { marginLeft: '-1px', backgroundColor: '#fff' },\r\n\tbuttonStyle: { marginTop: '10px', marginBottom: '5px', borderRadius: '0px' },\r\n    labelStyle:{\r\n        textDecoration:'bold',\r\n    },\r\n  }));\r\n\r\nexport const AddTask = (props)=>{\r\n    const classes = useStyles();\r\n    const {addNewTask}=props;\r\n    // newTask will hold the new item details to be added into the list\r\n    const [newTask,setNewTask]=useState({title:'',description:''});\r\n\r\n    // function to handle the addition of new tasks into the todo List\r\n    const handleNewTask = (e)=>{\r\n        e.preventDefault();\r\n        addNewTask(newTask);\r\n        setNewTask({title:'',description:''});\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Grid>\r\n\t\t\t\t<Paper elevation={10} className={classes.paperStyle}>\r\n\t\t\t\t\t<Grid align=\"center\">\r\n\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.text}>\r\n\t\t\t\t\t\t\tAdd New Task\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<label htmlFor=\"title\" className={classes.labelStyle}>Title</label>\r\n\t\t\t\t\t\t\t<TextField\r\n                                type=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\" Title\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n\t\t\t\t\t\t\t\tclassName={classes.textFieldStyle}\r\n\t\t\t\t\t\t\t\tvalue={newTask.title}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"description\" className={classes.labelStyle}>Description</label>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\" Description\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n\t\t\t\t\t\t\t\tclassName={classes.textFieldStyle}\r\n\t\t\t\t\t\t\t\tvalue={newTask.description}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n                            {/* Button will be disabled if the fields are not filled */}\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tonClick={(e)=>handleNewTask(e)}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tclassName={classes.buttonStyle}\r\n                                disabled={newTask.title === '' || newTask.description===''}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd Task\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Grid>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default AddTask;","import React , {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListView from './ListView';\r\nimport AddTask from './addTask';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n  });\r\n\r\n// this component renders the three lists \r\nexport const TaskManagement=()=>{\r\n    const classes=useStyles();\r\n    const [items,setItems]=useState({todo:[],progress:[],done:[]});\r\n    const list=['todo','progress','done'];\r\n    // callback function to add new items to the list\r\n    const addNewTask=(task)=>{\r\n        const newTask = task ? task : null;\r\n        const todoItems = items.todo;\r\n        todoItems.push(newTask);\r\n        const updatedItems = {\r\n            ...items,\r\n            todoItems\r\n        };\r\n        setItems(updatedItems);\r\n    }\r\n    // common functionality to move items to either lists\r\n    const handleTaskMove = (src,dest,item)=>{\r\n        let srcList=items[src];\r\n        let destList=items[dest];\r\n        // modify sourcelist to remove the moved item\r\n        const newSrcList = srcList.filter((it)=>!isEqual(it,item));\r\n        const newDestList = destList;\r\n        // modify destination list to add the moved item\r\n        newDestList.push(item)\r\n        let updatedItems={...items};\r\n        updatedItems[src]=newSrcList;\r\n        updatedItems[dest]=newDestList;\r\n        setItems(updatedItems);\r\n    }\r\n    return(\r\n        <>\r\n        <div className={classes.root}>\r\n            {\r\n                list.map((listInstance)=>{\r\n                    return <ListView listLabels={list} listName={listInstance} listItems={items[listInstance]} moveHandler={handleTaskMove}/>;\r\n                })\r\n            }\r\n        </div>\r\n        <AddTask addNewTask={addNewTask}/>\r\n    </>\r\n    )\r\n}\r\nexport default TaskManagement;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Header from './header';\r\nimport Footer from './footer';\r\nimport TaskManagement from './TaskManagement';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor:'#959fbbc7',\r\n    height:'100vh',\r\n  },\r\n});\r\nexport const App=()=> {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n    <div className={classes.root}>\r\n    <Header/>\r\n    <TaskManagement/>\r\n    <Footer/>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}